#!/bin/bash
#PBS -N fdelmod
#PBS -q verylong
#PBS -l nodes=1
#PBS -k eo
#PBS -j eo

#To use the model generated by makemod you can choice which parameter (cp, ro) represents which; fdemmodc needs the following gridded
#models:
#
#file_er= .......... Er file: griddel model for relative permittivity
#file_ks= .......... Ksigma file: griddel model for conductivity
#
#if you make a model with makemod and use for cp the relative permittivity and for ro the conductivity (as in the example em.scr)
#then you should use the xxx_cp.su model for file_er and xxx_ro.su for file_ks. 
# The makemod labels cp and ro and just placeholders for er and ks and you can fill in any values for cp and ro. The makemod program does not check any of these values and just builds the gridded models given the provided values for cp and ro 

which makewave
which makemod

cd /Users/jan/src/OpenSource/fdemmodc/demo

er=1
ksigma=0.001
dx=0.02
dt=4e-11

makemod sizex=20 sizez=10 dx=$dx dz=$dx cp0=$er ro0=$ksigma \
	orig=0,0 file_base=syncl.su \
	intt=def x=0,20 z=3,3 poly=0 cp=6 ro=0.002 \
	intt=def x=0,10,20 z=6,4,4 poly=0 cp=8 ro=0.002 \
	intt=def x=0,16,20 z=7,4,4 poly=0 cp=4 ro=0.002 \
	intt=def x=0,20 z=8,8 poly=0 cp=7 ro=0.002

makewave fp=250e+6 dt=$dt file_out=wave.su nt=4096 t0=6e-9 verbose=1


../fdemmodc \
    file_er=syncl_cp.su ischeme=1 \
    file_ks=syncl_ro.su \
    file_src=wave.su \
    file_rcv=shot_zsrc1150.su \
    src_type=7 \
	src_orient=1 \
	src_injectionrate=1 \
    dtrcv=1e-10 \
	rec_delay=6e-9 \
    verbose=3 \
    tmod=2e-7 \
	dt=$dt \
    dxrcv=0.02 \
    xrcv1=0 xrcv2=20 \
    zrcv1=1 zrcv2=1 \
    xsrc=10 zsrc=1 \
    ntaper=200 \
    tsnap1=6e-9 tsnap2=2e-7 dtsnap=2e-8 \
    left=4 right=4 top=4 bottom=4

# to display tghe modeled data with SU:
#The 'problem' with displaying EM data with Seismic Unix is that the dt value (1e-10) is very small 
# (compared to seismic) and SU can not handle these small dt values very well. 
# To trick SU you can do the following 
#
# suximage < shot_zsrc1150_rey.su d1=1 perc=99
#
# suxgraph < wave.su d1=1 
#
# will display the wavelet. 
#
# Using d1 you tell SU that the time step is 1, and then the display will look fine. 
#
